version: 1
policy:
  pullRequests: public
tasks:
  $let:
    head_rev:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.sha}
      else:
        $if: 'tasks_for == "github-push"'
        then: ${event.after}
        else: ${event.release.tag_name}

    repository:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.repo.html_url}
      else: ${event.repository.html_url}

    owner: ${event.sender.login}@users.noreply.github.com

    shouldPush:
      $if: 'tasks_for == "github-pull-request"'
      then: false
      else:
        $if: 'event.repository.html_url != "https://github.com/mozilla-releng/k8s-autoscale"'
        then:
          false
        else:
          $if: 'tasks_for == "github-release"'
          then: false
          else:
            # push the docker image only for changes on the production and master branches
            $if: 'event.ref in ["refs/heads/production", "refs/heads/master"]'
            then: true
            else: false

    docker_tag:
      $if: 'tasks_for == "github-pull-request"'
      then: pull-request
      else:
        $if: 'tasks_for == "github-release"'
        then: ${event.release.tag_name}
        else: # push
          $if: 'event.ref == "refs/heads/production"'
          then: production
          else:
            $if: 'event.ref == "refs/heads/master"'
            # Use the `:dev` docker tag for master pushes for the "nonprod" K8S
            # cluster. It matches the scriptworkers' docker image naming schema.
            then: dev
            else: unknown

  in:
    - taskId: '${as_slugid("py37")}'
      provisionerId: releng-t
      workerType: linux
      created: {$fromNow: ''}
      deadline: {$fromNow: '4 hours'}
      payload:
        maxRunTime: 3600
        image: python:3.7
        command:
          - sh
          - -lxce
          - >-
            git clone ${repository} /src &&
            cd /src &&
            git config advice.detachedHead false &&
            git checkout ${head_rev} &&
            pip install tox &&
            tox
      metadata:
        name: tox py37 (${docker_tag})
        description: code linting & unit tests on py37 (${docker_tag})
        owner: ${owner}
        source: ${repository}/raw/${head_rev}/.taskcluster.yml

    - $if: 'shouldPush'
      then:
        taskId: '${as_slugid("docker_push")}'
        dependencies:
          - '${as_slugid("py37")}'
        provisionerId: releng-3
        workerType: linux
        created: {$fromNow: ''}
        deadline: {$fromNow: '24 hours'}
        payload:
          features:
            # Needed for access to secret
            taskclusterProxy: true
            dind: true
          maxRunTime: 3600
          image: mozillareleases/python-test-runner
          env:
            SECRET_URL: http://taskcluster/secrets/v1/secret/project/releng/k8s-autoscale/deploy
            DOCKERHUB_EMAIL: release+dockerhub+services@mozilla.com
            DOCKERHUB_USER: mozillarelengservices
            TAG: mozilla/releng-k8s-autoscale:${docker_tag}
          command:
            - bash
            - -ce
            - >-
              git clone ${repository} /src &&
              cd /src &&
              git config advice.detachedHead false &&
              git checkout ${head_rev} &&
              docker.d/generate_version_json.sh &&
              cat version.json &&
              docker build -f Dockerfile -t mozilla/releng-k8s-autoscale:${docker_tag} . &&
              docker save mozilla/releng-k8s-autoscale:${docker_tag} > /tmp/image.tar &&
              ./docker.d/push_image.sh
          artifacts:
            public/image.tar:
              expires: {$fromNow: '8 weeks'}
              path: /tmp/image.tar
              type: file
        scopes:
          - secrets:get:project/releng/k8s-autoscale/deploy
        metadata:
          name: build and push docker image (${docker_tag})
          description: build and push docker image (${docker_tag})
          owner: ${owner}
          source: ${repository}/raw/${head_rev}/.taskcluster.yml

      else: # run docker build to verify it works
        taskId: '${as_slugid("docker_build")}'
        dependencies:
          - '${as_slugid("py37")}'
        provisionerId: releng-t
        workerType: linux
        created: {$fromNow: ''}
        deadline: {$fromNow: '24 hours'}
        payload:
          features:
            dind: true
          maxRunTime: 3600
          image: mozillareleases/python-test-runner
          command:
            - bash
            - -ce
            - >-
              git clone ${repository} /src &&
              cd /src &&
              git config advice.detachedHead false &&
              git checkout ${head_rev} &&
              docker.d/generate_version_json.sh &&
              cat version.json &&
              docker build -f Dockerfile -t mozilla/releng-k8s-autoscale:${docker_tag} . &&
              docker save mozilla/releng-k8s-autoscale:${docker_tag} > /tmp/image.tar
          artifacts:
            public/image.tar:
              expires: {$fromNow: '2 weeks'}
              path: /tmp/image.tar
              type: file
        metadata:
          name: docker build (${docker_tag})
          description: build docker image (${docker_tag})
          owner: ${owner}
          source: ${repository}/raw/${head_rev}/.taskcluster.yml
