version: 1
policy:
  pullRequests: public
tasks:
  $let:
    head_rev:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.sha}
      else:
        $if: 'tasks_for == "github-push"'
        then: ${event.after}
        else: ${event.release.tag_name}

    repository:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.repo.html_url}
      else: ${event.repository.html_url}

    owner: ${event.sender.login}@users.noreply.github.com

    push_docker_image:
      $if: 'tasks_for == "github-pull-request"'
      then: '0'
      else:
        $if: 'event.repository.html_url != "https://github.com/mozilla-releng/k8s-autoscale"'
        then: '0'
        else:
          $if: 'tasks_for == "github-release"'
          then: '0'
          else:
            # push the docker image only for changes on the production and master branches
            $if: 'event.ref in ["refs/heads/production", "refs/heads/master"]'
            then: '1'
            else: '0'

    docker_tag:
      $if: 'tasks_for == "github-pull-request"'
      then: pull-request
      else:
        $if: 'tasks_for == "github-release"'
        then: ${event.release.tag_name}
        else: # push
          $if: 'event.ref == "refs/heads/production"'
          then: production
          else:
            $if: 'event.ref == "refs/heads/master"'
            # Use the `:dev` docker tag for master pushes for the "nonprod" K8S
            # cluster. It matches the scriptworkers' docker image naming schema.
            then: dev
            else: unknown

  in:
    - taskId: '${as_slugid("py37")}'
      provisionerId: releng-t
      workerType: linux
      created: {$fromNow: ''}
      deadline: {$fromNow: '4 hours'}
      payload:
        maxRunTime: 3600
        image: python:3.7
        command:
          - sh
          - -lxce
          - >-
            git clone ${repository} /src &&
            cd /src &&
            git config advice.detachedHead false &&
            git checkout ${head_rev} &&
            pip install tox &&
            tox
      metadata:
        name: tox py37 (${docker_tag})
        description: code linting & unit tests on py37 (${docker_tag})
        owner: ${owner}
        source: ${repository}/raw/${head_rev}/.taskcluster.yml

    - taskId: '${as_slugid("docker")}'
      dependencies:
        - '${as_slugid("py37")}'
      provisionerId:
        $if: 'push_docker_image == "1"'
        then: 'releng-3'
        else: 'releng-t'
      workerType: linux
      created: {$fromNow: ''}
      deadline: {$fromNow: '24 hours'}
      payload:
        features:
          # Needed for access to secret
          taskclusterProxy: true
          dind: true
        maxRunTime: 3600
        image: 'docker:1.6.2'
        env:
          SECRET_URL: http://taskcluster/secrets/v1/secret/project/releng/k8s-autoscale/deploy
          DOCKERHUB_EMAIL: release+dockerhub+services@mozilla.com
          DOCKERHUB_USER: mozillarelengservices
          TAG: mozilla/releng-k8s-autoscale:${docker_tag}
          REPO_URL: '${repository}'
          GIT_HEAD_REV: '${head_rev}'
          PUSH_DOCKER_IMAGE: '${push_docker_image}'
        command:
          - sh
          - -lxce
          - >-
            cd /tmp &&
            wget ${repository}/archive/${head_rev}.tar.gz &&
            tar zxf ${head_rev}.tar.gz &&
            mv k8s-autoscale-${head_rev} /src &&
            cd /src/ &&
            docker.d/generate_version_json.sh &&
            docker build -f Dockerfile -t mozilla/releng-k8s-autoscale:${docker_tag} . &&
            if [ "$PUSH_DOCKER_IMAGE" == "1" ]; then
              ./docker.d/push_image.sh
            fi
      scopes:
        $if: 'push_docker_image == "0"'
        then: []
        else:
          - 'secrets:get:project/releng/k8s-autoscale/deploy'
      metadata:
        $let:
          description:
            $if: 'push_docker_image == "0"'
            then: 'build docker image (${docker_tag})'
            else: 'build and push docker image (${docker_tag})'
        in:
          name: '${description}'
          description: '${description}'
          owner: ${owner}
          source: ${repository}/raw/${head_rev}/.taskcluster.yml
